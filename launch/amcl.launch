<launch>
    <!-- <include file="$(find robot_description)/launch/spawn.launch"/> -->
    <!-- <include file="$(find robot_control)/launch/control.launch"/> -->

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find robotics_amcl)/maps/laser_map.yaml">
        <param name="frame_id" value="map"/>
    </node>

    <!-- Extended Kalman Filter from robot_pose_ekf Node-->
    <!-- Subscribe: /odom, /imu_data, /vo -->
    <!-- Publish: /robot_pose_ekf/odom_combined -->
    <!-- Provides the odom to base_footprint transform.  -->
    <!-- <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" output="screen">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="base_footprint"/>
        <param name="freq" value="30"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="true"/>
        <param name="imu_used" value="true"/>
        <param name="vo_used" value="false"/>
        <param name="gps_used" value="false"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="false"/>
    </node> -->

    <!-- Initial pose. -->
    <!-- Publish: /initialpose -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find robotics_amcl)/rviz/config.rviz"/>

    <!-- Run the AMCL -->
    <!-- <remap from="odom" to="robot_pose_ekf/odom_combined"/> -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <remap from="scan" to="my_robot/rplidar/laser/scan"/>
        <!-- Publish scans from best pose at a max of 10 Hz -->
        <param name="odom_model_type" value="omni"/>
        <!-- <param name="odom_model_type" value="diff"/> -->
        <param name="odom_alpha5" value="0.1"/>
        <param name="gui_publish_rate" value="10.0"/>
        <param name="laser_max_beams" value="30"/>
        <param name="min_particles" value="500"/>
        <param name="max_particles" value="5000"/>
        <param name="kld_err" value="0.05"/>
        <param name="kld_z" value="0.99"/>
        <param name="odom_alpha1" value="0.2"/>
        <param name="odom_alpha2" value="0.2"/>
        <!-- translation std dev, m -->
        <param name="odom_alpha3" value="0.8"/>
        <param name="odom_alpha4" value="0.2"/>
        <param name="laser_z_hit" value="0.5"/>
        <param name="laser_z_short" value="0.05"/>
        <param name="laser_z_max" value="0.05"/>
        <param name="laser_z_rand" value="0.5"/>
        <param name="laser_sigma_hit" value="0.2"/>
        <param name="laser_lambda_short" value="0.1"/>
        <param name="laser_model_type" value="likelihood_field"/>
        <!-- <param name="laser_model_type" value="beam"/> -->
        <param name="laser_likelihood_min_dist" value="0.45"/>
        <param name="laser_likelihood_max_dist" value="8.0"/>
        <param name="update_min_d" value="0.2"/>
        <param name="update_min_a" value="0.5"/>
        <!-- Added: -->
        <!-- "An implementation detail: on receipt of the first laser scan, 
        amcl looks up the transform between the laser's frame and the base 
        frame (~base_frame_id), and latches it forever. So amcl cannot handle 
        a laser that moves with respect to the base." -->
        <!-- Which frame to use for the robot base.  -->
        <param name="base_frame_id" value="carcaca"/>
        <!-- Modified: -->
        <!-- Which frame to use for odometry. -->
        <param name="odom_frame_id" value="odom"/> 
        <param name="resample_interval" value="1"/>
        <param name="transform_tolerance" value="0.1"/>
        <param name="recovery_alpha_slow" value="0.001"/>
        <param name="recovery_alpha_fast" value="0.1"/>
    </node>

    <!-- Set the global_localization service of the AMCL -->
    <node pkg="rosservice" type="rosservice" name="global_loc" args="call --wait /global_localization"/>

    <!-- Run the implemented mcl -->
    <!-- <node pkg="robotics_amcl" type="robotics_amcl" name="robotics_amcl" output="screen"/> -->
</launch>